{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  inputAmount(inputNumber) {\n    const formattedInput = inputNumber.toString().replace(',', '.');\n    let result = this.http.post(`https://localhost:7123/api/Convertion/Create?inputNumber=${formattedInput}`, this.httpOptions);\n    return result;\n  }\n  getAmount() {\n    return this.http.get(`https://localhost:7123/api/Convertion`, this.httpOptions);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","UserService","constructor","http","httpOptions","headers","inputAmount","inputNumber","formattedInput","toString","replace","result","post","getAmount","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/kumarsunny/Desktop/ConversionApp/Frontend/src/app/Core/services/user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, catchError, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { getAmountResponses } from '../models/get-amount.model';\nimport { environment } from 'src/environments/environment';\nimport { InputDto } from '../models/input-number-request.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private http: HttpClient) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  };\n\n  inputAmount(inputNumber: number): Observable<InputDto> {\n    const formattedInput = inputNumber.toString().replace(',', '.');\n    let result: Observable<InputDto> = this.http.post<InputDto>(\n      `https://localhost:7123/api/Convertion/Create?inputNumber=${formattedInput}`,\n      this.httpOptions\n    );\n    return result;\n  }\n\n  getAmount(): Observable<getAmountResponses[]> {\n    return this.http.get<getAmountResponses[]>(\n      `https://localhost:7123/api/Convertion`,\n      this.httpOptions\n    );\n  }\n}\n"],"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAQ9D,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIL,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;EANsC;EAQvCM,WAAWA,CAACC,WAAmB;IAC7B,MAAMC,cAAc,GAAGD,WAAW,CAACE,QAAQ,EAAE,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;IAC/D,IAAIC,MAAM,GAAyB,IAAI,CAACR,IAAI,CAACS,IAAI,CAC/C,4DAA4DJ,cAAc,EAAE,EAC5E,IAAI,CAACJ,WAAW,CACjB;IACD,OAAOO,MAAM;EACf;EAEAE,SAASA,CAAA;IACP,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAClB,uCAAuC,EACvC,IAAI,CAACV,WAAW,CACjB;EACH;EAAC,QAAAW,CAAA,G;qBAvBUd,WAAW,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXnB,WAAW;IAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}